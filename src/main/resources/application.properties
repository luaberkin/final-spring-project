spring.datasource.url=jdbc:postgresql://localhost:5432/variant2_Berkin
spring.datasource.username=postgres
spring.datasource.password=root
server.port=8082
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto= update


spring.task.scheduling.pool.size=10

security.oauth2.client.clientId=594575376242-7o5hccki57m3g2vrba1853tflrt53i3q.apps.googleusercontent.com
security.oauth2.client.clientSecret=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
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.client.scope=openid,email,profile
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.resource.preferTokenInfo=true

spring.kafka.bootstrap-servers = localhost:9092
spring.rabbitmq.exchanges.internal = internal.exchange
spring.rabbitmq.queues.notification = notification.queue
spring.rabbitmq.routing-keys.internal-notification = internal.notification.routing-key
#spring.kafka.consumer.group-id= group_id
#spring.kafka.consumer.auto-offset-reset = earliest
#spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#
#spring.kafka.producer.bootstrap-servers = localhost:9092
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer